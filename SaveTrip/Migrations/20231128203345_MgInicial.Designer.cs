// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaveTrip.Models;

#nullable disable

namespace SaveTrip.Migrations
{
    [DbContext(typeof(STDbContext))]
    [Migration("20231128203345_MgInicial")]
    partial class MgInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.23");

            modelBuilder.Entity("CostUser", b =>
                {
                    b.Property<int>("TravelersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserCostsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TravelersId", "UserCostsId");

                    b.HasIndex("UserCostsId");

                    b.ToTable("CostUser");
                });

            modelBuilder.Entity("SaveTrip.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPaid")
                        .HasColumnType("REAL");

                    b.Property<double>("TotalValor")
                        .HasColumnType("REAL");

                    b.Property<int>("TravelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravelId");

                    b.ToTable("costs", (string)null);
                });

            modelBuilder.Entity("SaveTrip.Models.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destiny")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalCost")
                        .HasColumnType("REAL");

                    b.Property<double>("TotalPaid")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("travels", (string)null);
                });

            modelBuilder.Entity("SaveTrip.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TravelUser", b =>
                {
                    b.Property<int>("TravelersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TravelersId", "TravelsId");

                    b.HasIndex("TravelsId");

                    b.ToTable("TravelUser");
                });

            modelBuilder.Entity("CostUser", b =>
                {
                    b.HasOne("SaveTrip.Models.User", null)
                        .WithMany()
                        .HasForeignKey("TravelersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaveTrip.Models.Cost", null)
                        .WithMany()
                        .HasForeignKey("UserCostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SaveTrip.Models.Cost", b =>
                {
                    b.HasOne("SaveTrip.Models.Travel", "Travel")
                        .WithMany("TravelCosts")
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Travel");
                });

            modelBuilder.Entity("TravelUser", b =>
                {
                    b.HasOne("SaveTrip.Models.User", null)
                        .WithMany()
                        .HasForeignKey("TravelersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaveTrip.Models.Travel", null)
                        .WithMany()
                        .HasForeignKey("TravelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SaveTrip.Models.Travel", b =>
                {
                    b.Navigation("TravelCosts");
                });
#pragma warning restore 612, 618
        }
    }
}
